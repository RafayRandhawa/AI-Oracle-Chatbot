import os
from dotenv import load_dotenv
from huggingface_hub import InferenceClient
from db_handler import extract_db_metadata
# Load environment variables from .env file
load_dotenv()

# Initialize Hugging Face Inference Client using the free provider
client = InferenceClient(
    provider="featherless-ai",
    api_key=os.getenv("HF_TOKEN")
)

def generate_sql_from_prompt(prompt: str) -> str:
    """
    Converts a natural language prompt into an SQL query using an AI model.
    
    Args:
        prompt (str): User's natural language prompt (e.g., "Show all employees")
    
    Returns:
        str: Cleaned SQL query generated by the model.
    """
    try:
        system_prompt = (
            "You are an AI SQL expert that generates **ONLY** SQL queries from user prompts. "
            "Return a syntactically correct SQL query for Oracle Database. "
            "DO NOT include explanations, formatting, or text outside the SQL query.\n\n"
            f"Here is the database metadata: {extract_db_metadata()}"
        )

        # Compose chat messages
        messages = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]

        # Generate completion from model
        completion = client.chat.completions.create(
            model="defog/llama-3-sqlcoder-8b",
            
            messages=messages,
        )
        
    
        # Extract the AI-generated message
        ai_message = completion.choices[0].message.content.strip()

        # Optional cleanup: remove triple backticks if model returns formatted SQL
        if ai_message.startswith("```") and ai_message.endswith("```"):
            ai_message = '\n'.join(ai_message.split('\n')[1:-1]).strip()

        return ai_message

    except Exception as e:
        # Raising exception is better for debugging/logging in production
        if "429" in str(e):
            return {"error": "Rate limit exceeded. Please wait and try again later."}
        raise RuntimeError(f"AI SQL generation failed: {e}")
